


<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
        <title>GGS.js at master from jonikorpi/Golden-Grid-System - GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />

    
    

    <meta content="authenticity_token" name="csrf-param" />
<meta content="30520aace8bed846d2524c0070bc628e62570ba2" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/stylesheets/bundle_github.css?b915f9c17da0f47c02bf3e31d9644e942673b9b8" media="screen" rel="stylesheet" type="text/css" />
    

    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundle_jquery.js?9d53e99b246b1c0c67e8a66f3c7a90c02ccff13d" type="text/javascript"></script>

    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundle_github.js?532918ff1b26ecdc00649523cab30bd517b11ae0" type="text/javascript"></script>

    

      <link rel='permalink' href='/jonikorpi/Golden-Grid-System/blob/60710710a2cacc52b1762568f4666d9170917abc/GGS.js'>
    

    <meta name="description" content="Golden-Grid-System - A folding grid for responsive design." />
  <link href="https://github.com/jonikorpi/Golden-Grid-System/commits/master.atom" rel="alternate" title="Recent Commits to Golden-Grid-System:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob  env-production ">
    


    

    <div id="main">
      <div id="header" class="true">
          <a class="logo" href="https://github.com">
            <img alt="github" class="default svg" height="45" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6.svg" />
            <img alt="github" class="default png" height="45" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6.png" />
            <!--[if (gt IE 8)|!(IE)]><!-->
            <img alt="github" class="hover svg" height="45" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6-hover.svg" />
            <img alt="github" class="hover png" height="45" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6-hover.png" />
            <!--<![endif]-->
          </a>

        <div class="topsearch">
    <!--
      make sure to use fully qualified URLs here since this nav
      is used on error pages on other domains
    -->
    <ul class="nav logged_out">
        <li class="pricing"><a href="https://github.com/plans">Signup and Pricing</a></li>
        <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
      <li class="features"><a href="https://github.com/features">Features</a></li>
        <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      <li class="login"><a href="https://github.com/login?return_to=%2Fjonikorpi%2FGolden-Grid-System%2Fblob%2Fmaster%2FGGS.js">Login</a></li>
    </ul>
</div>

      </div>

      
            <div class="site">
      <div class="pagehead repohead vis-public   instapaper_ignore readability-menu">


      <div class="title-actions-bar">
        <h1>
          <a href="/jonikorpi">jonikorpi</a> /
          <strong><a href="/jonikorpi/Golden-Grid-System" class="js-current-repository">Golden-Grid-System</a></strong>
        </h1>
        



            <ul class="pagehead-actions">

        <li>
            <a href="/jonikorpi/Golden-Grid-System/toggle_watch" class="minibutton btn-watch watch-button" onclick="var f = document.createElement('form'); f.style.display = 'none'; this.parentNode.appendChild(f); f.method = 'POST'; f.action = this.href;var s = document.createElement('input'); s.setAttribute('type', 'hidden'); s.setAttribute('name', 'authenticity_token'); s.setAttribute('value', '30520aace8bed846d2524c0070bc628e62570ba2'); f.appendChild(s);f.submit();return false;"><span><span class="icon"></span>Watch</span></a>
        </li>
            <li><a href="/jonikorpi/Golden-Grid-System/fork" class="minibutton btn-fork fork-button" onclick="var f = document.createElement('form'); f.style.display = 'none'; this.parentNode.appendChild(f); f.method = 'POST'; f.action = this.href;var s = document.createElement('input'); s.setAttribute('type', 'hidden'); s.setAttribute('name', 'authenticity_token'); s.setAttribute('value', '30520aace8bed846d2524c0070bc628e62570ba2'); f.appendChild(s);f.submit();return false;"><span><span class="icon"></span>Fork</span></a></li>

          
      <li class="repostats">
        <ul class="repo-stats">
          <li class="watchers ">
            <a href="/jonikorpi/Golden-Grid-System/watchers" title="Watchers" class="tooltipped downwards">
              605
            </a>
          </li>
          <li class="forks">
            <a href="/jonikorpi/Golden-Grid-System/network" title="Forks" class="tooltipped downwards">
              50
            </a>
          </li>
        </ul>
      </li>
    </ul>

      </div>

        

  <ul class="tabs">
    <li><a href="/jonikorpi/Golden-Grid-System" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/jonikorpi/Golden-Grid-System/network" highlight="repo_networkrepo_fork_queue">Network</a>
    <li><a href="/jonikorpi/Golden-Grid-System/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>2</span></a></li>

      <li><a href="/jonikorpi/Golden-Grid-System/issues" highlight="repo_issues">Issues <span class='counter'>4</span></a></li>


    <li><a href="/jonikorpi/Golden-Grid-System/graphs" highlight="repo_graphsrepo_contributors">Stats &amp; Graphs</a></li>

  </ul>

  

<div class="subnav-bar">

  <ul class="actions">
    
      <li class="switcher">

        <div class="context-menu-container js-menu-container">
          <span class="text">Current branch:</span>
          <a href="#"
             class="minibutton bigger switcher context-menu-button js-menu-target js-commitish-button btn-branch repo-tree"
             data-master-branch="master"
             data-ref="master">
            <span><span class="icon"></span>master</span>
          </a>

          <div class="context-pane commitish-context js-menu-content">
            <a href="javascript:;" class="close js-menu-close"></a>
            <div class="title">Switch Branches/Tags</div>
            <div class="body pane-selector commitish-selector js-filterable-commitishes">
              <div class="filterbar">
                <div class="placeholder-field js-placeholder-field">
                  <label class="placeholder" for="context-commitish-filter-field" data-placeholder-mode="sticky">Filter branches/tags</label>
                  <input type="text" id="context-commitish-filter-field" class="commitish-filter" />
                </div>

                <ul class="tabs">
                  <li><a href="#" data-filter="branches" class="selected">Branches</a></li>
                  <li><a href="#" data-filter="tags">Tags</a></li>
                </ul>
              </div>

                <div class="commitish-item branch-commitish selector-item">
                  <h4>
                      <a href="/jonikorpi/Golden-Grid-System/blob/master/GGS.js" data-name="master">master</a>
                  </h4>
                </div>


              <div class="no-results" style="display:none">Nothing to show</div>
            </div>
          </div><!-- /.commitish-context-context -->
        </div>

      </li>
  </ul>

  <ul class="subnav">
    <li><a href="/jonikorpi/Golden-Grid-System" class="selected" highlight="repo_source">Files</a></li>
    <li><a href="/jonikorpi/Golden-Grid-System/commits/master" highlight="repo_commits">Commits</a></li>
    <li><a href="/jonikorpi/Golden-Grid-System/branches" class="" highlight="repo_branches">Branches <span class="counter">1</span></a></li>
    <li><a href="/jonikorpi/Golden-Grid-System/tags" class="blank" highlight="repo_tags">Tags <span class="counter">0</span></a></li>
    <li><a href="/jonikorpi/Golden-Grid-System/downloads" class="blank" highlight="repo_downloads">Downloads <span class="counter">0</span></a></li>
  </ul>

</div>
  
  
  


        

      </div><!-- /.pagehead -->

      




  <div class="commit commit-tease js-details-container">
  <p class="commit-title ">
      <a href="/jonikorpi/Golden-Grid-System/blob/master/GGS.html"><a href="/jonikorpi/Golden-Grid-System/commit/60710710a2cacc52b1762568f4666d9170917abc" class="message">Missing @ from the final 2560px max-width declaration</a></a>
      <a href="javascript:;" class="minibutton expander-minibutton js-details-target"><span>…</span></a>
  </p>
    <div class="commit-desc"><pre><a href="https://github.com/jonikorpi/Golden-Grid-System/issues/7">https://github.com/jonikorpi/Golden-Grid-System/issues/7</a></pre></div>
  <div class="commit-meta">
    <a href="/jonikorpi/Golden-Grid-System/commit/60710710a2cacc52b1762568f4666d9170917abc" class="sha-block">commit <span class="sha">60710710a2</span></a>

    <div class="authorship">
      <img src="https://secure.gravatar.com/avatar/938ae65b289d32d860f8c619b46a49e7?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" alt="" width="20" height="20" class="gravatar" />
      <span class="author-name"><a href="/jonikorpi">jonikorpi</a></span>
      authored <time class="js-relative-date" datetime="2011-09-23T06:25:57-07:00" title="2011-09-23 06:25:57">September 23, 2011</time>

    </div>
  </div>
</div>



  <div id="slider">

  

    <div class="breadcrumb" data-path="GGS.js/">
      <b><a href="/jonikorpi/Golden-Grid-System/tree/c7103c01e4406be08a843171ee14e86590b18f0c" class="js-rewrite-sha">Golden-Grid-System</a></b> / GGS.js       <span style="display:none" id="clippy_2998" class="clippy-text">GGS.js</span>
      
      <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"
              width="110"
              height="14"
              class="clippy"
              id="clippy" >
      <param name="movie" value="https://a248.e.akamai.net/assets.github.com/flash/clippy.swf?v5"/>
      <param name="allowScriptAccess" value="always" />
      <param name="quality" value="high" />
      <param name="scale" value="noscale" />
      <param NAME="FlashVars" value="id=clippy_2998&amp;copied=copied!&amp;copyto=copy to clipboard">
      <param name="bgcolor" value="#FFFFFF">
      <param name="wmode" value="opaque">
      <embed src="https://a248.e.akamai.net/assets.github.com/flash/clippy.swf?v5"
             width="110"
             height="14"
             name="clippy"
             quality="high"
             allowScriptAccess="always"
             type="application/x-shockwave-flash"
             pluginspage="http://www.macromedia.com/go/getflashplayer"
             FlashVars="id=clippy_2998&amp;copied=copied!&amp;copyto=copy to clipboard"
             bgcolor="#FFFFFF"
             wmode="opaque"
      />
      </object>
      

    </div>

    <div class="frames">
      <div class="frame frame-center" data-path="GGS.js/" data-permalink-url="/jonikorpi/Golden-Grid-System/blob/c7103c01e4406be08a843171ee14e86590b18f0c/GGS.js" data-title="GGS.js at master from jonikorpi/Golden-Grid-System - GitHub" data-type="blob">
        
          <ul class="big-actions">
            <li><a class="file-edit-link minibutton js-rewrite-sha" href="/jonikorpi/Golden-Grid-System/edit/c7103c01e4406be08a843171ee14e86590b18f0c/GGS.js"><span>Edit this file</span></a></li>
          </ul>
        

        <div id="files">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><img alt="Txt" height="16" src="https://a248.e.akamai.net/assets.github.com/images/icons/txt.png" width="16" /></span>
                <span class="mode" title="File Mode">100644</span>
                
                  <span>159 lines (139 sloc)</span>
                
                <span>27.821 kb</span>
              </div>
              <ul class="actions">
                <li><a href="/jonikorpi/Golden-Grid-System/raw/master/GGS.js" id="raw-url">raw</a></li>
                
                  <li><a href="/jonikorpi/Golden-Grid-System/blame/master/GGS.js">blame</a></li>
                
                <li><a href="/jonikorpi/Golden-Grid-System/commits/master/GGS.js">history</a></li>
              </ul>
            </div>
            
  <div class="data type-javascript">
    
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
</pre>
          </td>
          <td width="100%">
            
              
                <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm">*</span></div><div class='line' id='LC3'><span class="cm">*  Golden Gridlet (1.01) 	&lt;http://goldengridsystem.com/&gt;</span></div><div class='line' id='LC4'><span class="cm">*  by Joni Korpi 			&lt;http://jonikorpi.com/&gt;</span></div><div class='line' id='LC5'><span class="cm">*  licensed under MIT 		&lt;http://opensource.org/licenses/mit-license.php&gt;</span></div><div class='line' id='LC6'><span class="cm">*	</span></div><div class='line' id='LC7'><span class="cm">*/</span></div><div class='line' id='LC8'><br/></div><div class='line' id='LC9'><span class="kd">var</span> <span class="nx">guideColor</span> <span class="o">=</span> <span class="s1">&#39;rgb(255,195,0)&#39;</span><span class="p">;</span></div><div class='line' id='LC10'><span class="kd">var</span> <span class="nx">guideInnerColor</span> <span class="o">=</span> <span class="s1">&#39;rgba(255,255,255, 0.91)&#39;</span><span class="p">;</span></div><div class='line' id='LC11'><span class="kd">var</span> <span class="nx">guideOpacity</span> <span class="o">=</span> <span class="s1">&#39;0.618&#39;</span><span class="p">;</span></div><div class='line' id='LC12'><br/></div><div class='line' id='LC13'><span class="kd">var</span> <span class="nx">switchColor</span> <span class="o">=</span> <span class="s1">&#39;rgb(0,0,0)&#39;</span><span class="p">;</span></div><div class='line' id='LC14'><span class="kd">var</span> <span class="nx">switchOpacity</span> <span class="o">=</span> <span class="s1">&#39;0.618&#39;</span><span class="p">;</span></div><div class='line' id='LC15'><br/></div><div class='line' id='LC16'><span class="kd">var</span> <span class="nx">baseFontSize</span> <span class="o">=</span> <span class="mi">16</span><span class="p">;</span></div><div class='line' id='LC17'><span class="kd">var</span> <span class="nx">baselineGridHeight</span> <span class="o">=</span> <span class="p">(</span><span class="mi">24</span> <span class="o">/</span> <span class="nx">baseFontSize</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;em&#39;</span><span class="p">;</span></div><div class='line' id='LC18'><br/></div><div class='line' id='LC19'><span class="kd">var</span> <span class="nx">eightColBreakpoint</span> <span class="o">=</span> <span class="p">((</span><span class="mi">720</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="nx">baseFontSize</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;em&#39;</span><span class="p">;</span></div><div class='line' id='LC20'><span class="kd">var</span> <span class="nx">sixteenColBreakpoint</span> <span class="o">=</span> <span class="p">((</span><span class="mi">1872</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="nx">baseFontSize</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;em&#39;</span><span class="p">;</span></div><div class='line' id='LC21'><br/></div><div class='line' id='LC22'><span class="cm">/*</span></div><div class='line' id='LC23'><span class="cm">*  Note that the script might not work as expected if </span></div><div class='line' id='LC24'><span class="cm">*  the &lt;body&gt; element of your page has a set width and </span></div><div class='line' id='LC25'><span class="cm">*  position: relative;, because the guides are appended </span></div><div class='line' id='LC26'><span class="cm">*  inside &lt;body&gt;, but positioned in relation to &lt;html&gt;.</span></div><div class='line' id='LC27'><span class="cm">*</span></div><div class='line' id='LC28'><span class="cm">*  Also note that the baseline grid doesn&#39;t really align</span></div><div class='line' id='LC29'><span class="cm">*  up anymore after zooming the baseline grid in or out,</span></div><div class='line' id='LC30'><span class="cm">*  because of rounding errors.</span></div><div class='line' id='LC31'><span class="cm">*/</span></div><div class='line' id='LC32'><br/></div><div class='line' id='LC33'><br/></div><div class='line' id='LC34'><span class="cm">/*!</span></div><div class='line' id='LC35'><span class="cm">  * Ender: open module JavaScript framework</span></div><div class='line' id='LC36'><span class="cm">  * copyright Dustin Diaz &amp; Jacob Thornton 2011 (@ded @fat)</span></div><div class='line' id='LC37'><span class="cm">  * https://ender.no.de</span></div><div class='line' id='LC38'><span class="cm">  * License MIT</span></div><div class='line' id='LC39'><span class="cm">  * Build: ender -b jeesh</span></div><div class='line' id='LC40'><span class="cm">  */</span></div><div class='line' id='LC41'><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">_select</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="s2">&quot;item&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">==</span><span class="nb">window</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">_select</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="o">!=</span><span class="s2">&quot;noConflict&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">!=</span><span class="s2">&quot;_VERSION&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,{</span><span class="nx">_VERSION</span><span class="o">:</span><span class="s2">&quot;0.2.4&quot;</span><span class="p">,</span><span class="nx">ender</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">fn</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="o">||</span><span class="p">{}}),</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">forEach</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">$</span><span class="o">:</span><span class="nx">d</span><span class="p">});</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">noConflict</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">d</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">ender</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="nx">d</span><span class="p">}(</span><span class="k">this</span><span class="p">),</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="o">==</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="k">this</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">prefix</span><span class="o">!=</span><span class="s2">&quot;xul&quot;</span><span class="o">&amp;&amp;!</span><span class="sr">/document/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">())</span><span class="o">&amp;&amp;!</span><span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="o">=</span><span class="sr">/over|out/</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/[^\.]*(?=\..*)\.|.*/</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="sr">/\..*/</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;addEventListener&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;attachEvent&quot;</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;removeEventListener&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;detachEvent&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="o">||</span><span class="p">{},</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">documentElement</span><span class="o">||</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">c</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}},</span><span class="nx">q</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">__uid</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">__uid</span><span class="o">||</span><span class="nx">b</span><span class="o">++</span><span class="p">},</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">{}},</span><span class="nx">s</span><span class="o">=</span><span class="nx">n</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">j</span><span class="p">](</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;_on&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;_on&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="nx">k</span><span class="p">](</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">t</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span><span class="o">||</span><span class="k">this</span><span class="p">).</span><span class="nx">parentWindow</span><span class="o">||</span><span class="nx">a</span><span class="p">).</span><span class="nx">event</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">e</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">d</span><span class="p">))}},</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){(</span><span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">n</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">propertyName</span><span class="o">==</span><span class="s2">&quot;_on&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">||!</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,[</span><span class="nx">f</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">e</span><span class="p">))}},</span><span class="nx">v</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="p">{}),</span><span class="nx">k</span><span class="o">=</span><span class="nx">q</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">])</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">condition</span><span class="o">?</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">condition</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">base</span><span class="o">||</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="o">?</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">n</span><span class="o">||</span><span class="nx">m</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">==</span><span class="s2">&quot;unload&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">()}}</span><span class="nx">a</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="s2">&quot;propertychange&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">),</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">__uid</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">return</span> <span class="nx">h</span><span class="o">==</span><span class="s2">&quot;unload&quot;</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">)]</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">j</span><span class="o">||!</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">])</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">__uid</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">;){</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">][</span><span class="nx">d</span><span class="p">],</span><span class="k">delete</span> <span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">][</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">o</span><span class="p">]){</span><span class="nx">k</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">?</span><span class="nx">G</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">base</span><span class="o">:</span><span class="nx">k</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">n</span><span class="o">||</span><span class="nx">E</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="s2">&quot;propertychange&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">!=</span><span class="k">this</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}},</span><span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">b</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="o">?</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">;)</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">g</span><span class="o">?</span><span class="mi">4</span><span class="o">:</span><span class="mi">3</span><span class="p">))}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">w</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="sr">/\s/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">--</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="o">||</span><span class="nx">j</span><span class="o">&amp;&amp;!</span><span class="nx">m</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">z</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="nx">c</span><span class="o">||</span><span class="nx">m</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">||</span><span class="nx">h</span><span class="o">:</span><span class="nx">m</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">h</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">||</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">d</span><span class="p">])}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">--</span><span class="p">;){</span><span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">)[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">l</span><span class="p">[</span><span class="nx">k</span><span class="p">[</span><span class="nx">e</span><span class="p">]]</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">[</span><span class="nx">k</span><span class="p">[</span><span class="nx">e</span><span class="p">]].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">o</span><span class="p">])</span><span class="nx">B</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">l</span><span class="p">)</span><span class="nx">l</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">B</span><span class="o">=</span><span class="nx">n</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">evt</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;HTMLEvents&quot;</span><span class="o">:</span><span class="s2">&quot;UIEvents&quot;</span><span class="p">),</span><span class="nx">evt</span><span class="p">[</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;initEvent&quot;</span><span class="o">:</span><span class="s2">&quot;initUIEvent&quot;</span><span class="p">](</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">evt</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEventObject</span><span class="p">())</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;_on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">]</span><span class="o">++</span><span class="p">},</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">y</span><span class="o">:</span><span class="nx">C</span><span class="p">)(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">D</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">3</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">:</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">~</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;key&quot;</span><span class="p">))</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/click|mouse|menu/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">b</span><span class="p">.</span><span class="nx">rightClick</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="mi">3</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="o">==</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">pos</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientX</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientY</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientX</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientY</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientX</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientX</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientY</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientY</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">||</span><span class="nx">a</span><span class="p">[(</span><span class="nx">c</span><span class="o">==</span><span class="s2">&quot;mouseover&quot;</span><span class="o">?</span><span class="s2">&quot;from&quot;</span><span class="o">:</span><span class="s2">&quot;to&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;Element&quot;</span><span class="p">])}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">D</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">D</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">cancelBubble</span><span class="o">=!</span><span class="mi">0</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="p">{</span><span class="nx">click</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">dblclick</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">mouseup</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">mousedown</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">contextmenu</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">mousewheel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">DOMMouseScroll</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">mouseover</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">mouseout</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">mousemove</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">selectstart</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">selectend</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">keydown</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">keypress</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">keyup</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">orientationchange</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">touchstart</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">touchmove</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">touchend</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">touchcancel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">gesturestart</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">gesturechange</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">gestureend</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">focus</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">blur</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">change</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">reset</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">select</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">submit</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">load</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">unload</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">beforeunload</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">resize</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">move</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">DOMContentLoaded</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">readystatechange</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">abort</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">scroll</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">G</span><span class="o">=</span><span class="p">{</span><span class="nx">mouseenter</span><span class="o">:</span><span class="p">{</span><span class="nx">base</span><span class="o">:</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">condition</span><span class="o">:</span><span class="nx">F</span><span class="p">},</span><span class="nx">mouseleave</span><span class="o">:</span><span class="p">{</span><span class="nx">base</span><span class="o">:</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">condition</span><span class="o">:</span><span class="nx">F</span><span class="p">},</span><span class="nx">mousewheel</span><span class="o">:</span><span class="p">{</span><span class="nx">base</span><span class="o">:</span><span class="sr">/Firefox/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;DOMMouseScroll&quot;</span><span class="o">:</span><span class="s2">&quot;mousewheel&quot;</span><span class="p">}},</span><span class="nx">H</span><span class="o">=</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">remove</span><span class="o">:</span><span class="nx">z</span><span class="p">,</span><span class="nx">clone</span><span class="o">:</span><span class="nx">C</span><span class="p">,</span><span class="nx">fire</span><span class="o">:</span><span class="nx">A</span><span class="p">},</span><span class="nx">I</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">__uid</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">delete</span> <span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="k">delete</span> <span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">])};</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;unload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">CollectGarbage</span><span class="o">&amp;&amp;</span><span class="nx">CollectGarbage</span><span class="p">()});</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bean</span><span class="p">;</span><span class="nx">H</span><span class="p">.</span><span class="nx">noConflict</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">bean</span><span class="o">=</span><span class="nx">J</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">?</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">H</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">bean</span><span class="o">=</span><span class="nx">H</span><span class="p">}(</span><span class="k">this</span><span class="p">),</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">bean</span><span class="p">.</span><span class="nx">noConflict</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:</span><span class="p">[];</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">[</span><span class="nx">g</span><span class="p">]].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="o">!</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">==</span><span class="s2">&quot;add&quot;</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;fire&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;add&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;remove&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;fire&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">on</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">addListener</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">bind</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">listen</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">delegate</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">unbind</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">unlisten</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">removeListener</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">undelegate</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">emit</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">trigger</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">cloneEvents</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;clone&quot;</span><span class="p">),</span><span class="nx">hover</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="s2">&quot;change&quot;</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="s2">&quot;dblclick&quot;</span><span class="p">,</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="s2">&quot;focusin&quot;</span><span class="p">,</span><span class="s2">&quot;focusout&quot;</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="s2">&quot;keypress&quot;</span><span class="p">,</span><span class="s2">&quot;keyup&quot;</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="s2">&quot;scroll&quot;</span><span class="p">,</span><span class="s2">&quot;select&quot;</span><span class="p">,</span><span class="s2">&quot;submit&quot;</span><span class="p">,</span><span class="s2">&quot;unload&quot;</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">--</span><span class="p">;)</span><span class="nx">g</span><span class="p">[</span><span class="nx">i</span><span class="p">[</span><span class="nx">h</span><span class="p">]]</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">ender</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}(</span><span class="nx">ender</span><span class="p">),</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="sr">/^(?:body|html)$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">I</span><span class="p">()</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">})[</span><span class="nx">d</span><span class="p">];</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">=</span><span class="nx">c</span><span class="p">));</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">J</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">!=</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]}}</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">offset</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;relative&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">==</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;top&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">)];</span><span class="nx">e</span><span class="o">==</span><span class="s2">&quot;static&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">),</span><span class="nx">b</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;&lt;&quot;</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">selected</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">}()</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="nx">w</span><span class="p">(</span><span class="nx">F</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=!</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">e</span><span class="p">]</span><span class="o">?</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">$</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">cloneEvents</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">cloneEvents</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}()</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="o">++</span><span class="p">})},</span><span class="k">this</span><span class="p">),</span><span class="nx">w</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-(.)/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()})}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\s+)&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;(\\s+|$)&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;parentNode&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;getElementsByTagName&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="sr">/^checked|value|selected$/</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="sr">/select|fieldset|table|tbody|tfoot|td|tr|colgroup/i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;table&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="p">{</span><span class="nx">thead</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">tbody</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">tfoot</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">tr</span><span class="o">:</span><span class="s2">&quot;tbody&quot;</span><span class="p">,</span><span class="nx">th</span><span class="o">:</span><span class="s2">&quot;tr&quot;</span><span class="p">,</span><span class="nx">td</span><span class="o">:</span><span class="s2">&quot;tr&quot;</span><span class="p">,</span><span class="nx">fieldset</span><span class="o">:</span><span class="s2">&quot;form&quot;</span><span class="p">,</span><span class="nx">option</span><span class="o">:</span><span class="s2">&quot;select&quot;</span><span class="p">},</span><span class="nx">l</span><span class="o">=</span><span class="sr">/^checked|selected$/</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="sr">/msie/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="sr">/^-?[\d\.]+$/</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;setAttribute&quot;</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;getAttribute&quot;</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="sr">/(^\s*|\s*$)/g</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="p">{</span><span class="nx">lineHeight</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">x</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">trim</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">()}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">B</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="o">==</span><span class="s2">&quot;float&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;cssFloat&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="nx">d</span><span class="p">}</span><span class="o">:</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">==</span><span class="s2">&quot;float&quot;</span><span class="o">?</span><span class="s2">&quot;styleFloat&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="s2">&quot;opacity&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">100</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">filters</span><span class="p">[</span><span class="s2">&quot;DXImageTransform.Microsoft.Alpha&quot;</span><span class="p">].</span><span class="nx">opacity</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">filters</span><span class="p">(</span><span class="s2">&quot;alpha&quot;</span><span class="p">).</span><span class="nx">opacity</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}}</span><span class="k">return</span> <span class="nx">c</span><span class="o">/</span><span class="mi">100</span><span class="p">}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)]};</span><span class="nx">E</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">each</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">map</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">first</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">])},</span><span class="nx">last</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">])},</span><span class="nx">html</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">while</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)})}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">textContent</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;innerText&quot;</span><span class="o">:</span><span class="s2">&quot;textContent&quot;</span><span class="o">:</span><span class="s2">&quot;innerHTML&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span><span class="o">?</span><span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">})</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">text</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">addClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">))},</span><span class="k">this</span><span class="p">)},</span><span class="nx">removeClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot; &quot;</span><span class="p">)))},</span><span class="k">this</span><span class="p">)},</span><span class="nx">hasClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="p">)})</span><span class="o">:</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">)},</span><span class="nx">toggleClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot; &quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">)},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">})},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">})},</span><span class="nx">append</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">w</span><span class="p">(</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)})})},</span><span class="nx">prepend</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">w</span><span class="p">(</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)})})},</span><span class="nx">appendTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)})},</span><span class="nx">prependTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)})},</span><span class="nx">next</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">related</span><span class="p">(</span><span class="s2">&quot;nextSibling&quot;</span><span class="p">)},</span><span class="nx">previous</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">related</span><span class="p">(</span><span class="s2">&quot;previousSibling&quot;</span><span class="p">)},</span><span class="nx">related</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">while</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">})},</span><span class="nx">before</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">w</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)})})},</span><span class="nx">after</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">w</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)})})},</span><span class="nx">insertBefore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">insertAfter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)})},</span><span class="nx">css</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="kc">undefined</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="nx">d</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="nx">J</span><span class="p">.</span><span class="nx">doc</span><span class="p">()</span><span class="o">:</span><span class="nx">J</span><span class="p">.</span><span class="nx">viewport</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;width&quot;</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="o">==</span><span class="s2">&quot;height&quot;</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">return</span> <span class="nx">B</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">),</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">opacity</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="s2">&quot;alpha(opacity=&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">opacity</span><span class="o">*</span><span class="mi">100</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">zoom</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">zoom</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="k">delete</span> <span class="nx">f</span><span class="p">.</span><span class="nx">opacity</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;float&quot;</span><span class="p">])</span><span class="nx">m</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">styleFloat</span><span class="o">=</span><span class="nx">d</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssFloat</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">delete</span> <span class="nx">f</span><span class="p">[</span><span class="s2">&quot;float&quot;</span><span class="p">];</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">],(</span><span class="nx">b</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">u</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="nx">q</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">)};</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">g</span><span class="p">)},</span><span class="nx">offset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">D</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">d</span><span class="p">}},</span><span class="nx">attr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="p">](</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">==</span><span class="s2">&quot;value&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="nx">r</span><span class="p">](</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)})},</span><span class="nx">val</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">value</span><span class="p">},</span><span class="nx">removeAttr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">data</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="p">](</span><span class="s2">&quot;data-node-uid&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="p">[</span><span class="nx">r</span><span class="p">](</span><span class="s2">&quot;data-node-uid&quot;</span><span class="p">,</span><span class="o">++</span><span class="nx">o</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="p">](</span><span class="s2">&quot;data-node-uid&quot;</span><span class="p">);</span><span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="k">return</span> <span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">][</span><span class="nx">a</span><span class="p">]}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="p">](</span><span class="s2">&quot;data-node-uid&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="p">[</span><span class="nx">r</span><span class="p">](</span><span class="s2">&quot;data-node-uid&quot;</span><span class="p">,</span><span class="o">++</span><span class="nx">o</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="p">](</span><span class="s2">&quot;data-node-uid&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">})},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">empty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)})},</span><span class="nx">detach</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">scrollTop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">G</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;y&quot;</span><span class="p">)},</span><span class="nx">scrollLeft</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">G</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;x&quot;</span><span class="p">)}},</span><span class="nx">J</span><span class="p">.</span><span class="nx">setQueryEngine</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">delete</span> <span class="nx">J</span><span class="p">.</span><span class="nx">setQueryEngine</span><span class="p">},</span><span class="nx">J</span><span class="p">.</span><span class="nx">aug</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="nx">b</span><span class="o">||</span><span class="nx">E</span><span class="p">.</span><span class="nx">prototype</span><span class="p">)[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])},</span><span class="nx">J</span><span class="p">.</span><span class="nx">create</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/^&lt;([^\s&gt;]+)/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()]</span><span class="o">||</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">}()</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)]</span><span class="o">:</span><span class="p">[]},</span><span class="nx">J</span><span class="p">.</span><span class="nx">doc</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollWidth</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">();</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="p">),</span><span class="nx">height</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="p">)}},</span><span class="nx">J</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">J</span><span class="p">.</span><span class="nx">viewport</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">self</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">self</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">}},</span><span class="nx">J</span><span class="p">.</span><span class="nx">isAncestor</span><span class="o">=</span><span class="s2">&quot;compareDocumentPosition&quot;</span><span class="k">in</span> <span class="nx">d</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)</span><span class="o">==</span><span class="mi">16</span><span class="p">}</span><span class="o">:</span><span class="s2">&quot;contains&quot;</span><span class="k">in</span> <span class="nx">d</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">while</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bonzo</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">noConflict</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">bonzo</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">bonzo</span><span class="o">=</span><span class="nx">J</span><span class="p">}(</span><span class="k">this</span><span class="p">,</span><span class="nb">window</span><span class="p">),</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">label</span><span class="o">:</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="k">continue</span> <span class="nx">label</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">bonzo</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">setQueryEngine</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">ender</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">ender</span><span class="p">(</span><span class="nx">b</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">ender</span><span class="p">({</span><span class="nx">create</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">c</span><span class="p">))}}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">([</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">b</span><span class="p">)])},</span><span class="nx">a</span><span class="p">.</span><span class="nx">ender</span><span class="p">({</span><span class="nx">parents</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">while</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">){</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">break</span><span class="p">}}</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">j</span><span class="p">))},</span><span class="nx">closest</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">parents</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">first</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">])},</span><span class="nx">last</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">])},</span><span class="nx">next</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">next</span><span class="p">())},</span><span class="nx">previous</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">previous</span><span class="p">())},</span><span class="nx">appendTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">prependTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="p">).</span><span class="nx">prependTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">insertAfter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="p">).</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">insertBefore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="p">).</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">siblings</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">while</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">while</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="nx">children</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">i</span><span class="p">])))</span><span class="k">continue</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">))},</span><span class="nx">height</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">)},</span><span class="nx">width</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">)}},</span><span class="o">!</span><span class="mi">0</span><span class="p">)}(</span><span class="nx">ender</span><span class="o">||</span><span class="nx">$</span><span class="p">),</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">shift</span><span class="p">())</span><span class="nx">a</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;addEventListener&quot;</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="sr">/^loade|c/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">](</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">l</span><span class="p">()},</span><span class="nx">e</span><span class="p">),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="sr">/^c/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">())}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">domReady</span><span class="o">=</span><span class="nx">g</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">self</span><span class="o">!=</span><span class="nx">top</span><span class="o">?</span><span class="nx">k</span><span class="o">?</span><span class="nx">a</span><span class="p">()</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">domReady</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="mi">50</span><span class="p">)}</span><span class="nx">a</span><span class="p">()}()}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">k</span><span class="o">?</span><span class="nx">a</span><span class="p">()</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}(</span><span class="k">this</span><span class="p">,</span><span class="nb">document</span><span class="p">),</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">ender</span><span class="p">({</span><span class="nx">domReady</span><span class="o">:</span><span class="nx">domReady</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">ender</span><span class="p">({</span><span class="nx">ready</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">domReady</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="o">!</span><span class="mi">0</span><span class="p">)}(</span><span class="nx">ender</span><span class="p">),</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">X</span><span class="p">(</span><span class="nx">c</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">||!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">X</span><span class="p">))</span><span class="k">return</span> <span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">label</span><span class="o">:</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="k">continue</span> <span class="nx">label</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">9</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nb">window</span><span class="o">||</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="o">!==</span><span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nx">V</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">))</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">w</span><span class="p">))</span><span class="k">return</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span><span class="o">?</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">:</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">y</span><span class="p">))</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">M</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">C</span><span class="p">));</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">2</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="nx">w</span><span class="p">))</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">n</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="sr">/^[+~]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">while</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">n</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="nx">n</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}()</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;*&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">o</span><span class="p">))</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">2</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span><span class="k">while</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">]](</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]))</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">P</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">])))</span><span class="k">break</span><span class="p">;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">])}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;=&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">b</span><span class="o">==</span><span class="nx">c</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;^=&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;^=&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">L</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;^=&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">))));</span><span class="k">case</span><span class="s2">&quot;$=&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;$=&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">L</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;$=&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;$&quot;</span><span class="p">)));</span><span class="k">case</span><span class="s2">&quot;*=&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">L</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">))));</span><span class="k">case</span><span class="s2">&quot;~=&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;~=&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">L</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;~=&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(?:^|\\s+)&quot;</span><span class="o">+</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(?:\\s+|$)&quot;</span><span class="p">)));</span><span class="k">case</span><span class="s2">&quot;|=&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;|=&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">L</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;|=&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(-|$)&quot;</span><span class="p">)))}</span><span class="k">return</span> <span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">K</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">K</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="s2">&quot;\\$1&quot;</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">u</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">v</span><span class="p">)))</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">;){</span><span class="nx">k</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">||</span><span class="nx">J</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\s+)&quot;</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;(\\s+|$)&quot;</span><span class="p">))).</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">className</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">name</span><span class="o">||</span><span class="nx">l</span><span class="p">)</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">S</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">G</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">k</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">k</span><span class="p">}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="p">{}}</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="sr">/#([\w\-]+)/</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="sr">/\.[\w\-]+/g</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="sr">/^#([\w\-]+$)/</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="sr">/^\.([\w\-]+)$/</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="sr">/^([\w\-]+)$/</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="sr">/^([\w]+)?\.([\w\-]+)$/</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="sr">/\s*([\s\+\~&gt;])\s*/g</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="sr">/([\s\&gt;\+\~])(?![\s\w\-\/\?\&amp;\=\:\.\(\)\!,@#%&lt;&gt;\{\}\$\*\^&#39;&quot;]*\])/</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="sr">/([.*+?\^=!:${}()|\[\]\/\\])/g</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="sr">/^([a-z0-9]+)?(?:([\.\#]+[\w\-\.#]+)?)/</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="sr">/\[([\w\-]+)(?:([\|\^\$\*\~]?\=)[&#39;&quot;]?([ \w\-\/\?\&amp;\=\:\.\(\)\!,@#%&lt;&gt;\{\}\$\*\^]+)[&quot;&#39;]?)?\]/</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">source</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">F</span><span class="p">.</span><span class="nx">source</span><span class="o">+</span><span class="s2">&quot;)?&quot;</span><span class="p">),</span><span class="nx">H</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">},</span><span class="s2">&quot;&gt;&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">},</span><span class="s2">&quot;~&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">},</span><span class="s2">&quot;+&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">}};</span><span class="nx">I</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">g</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="kc">undefined</span><span class="p">},</span><span class="nx">s</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">new</span> <span class="nx">I</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="k">new</span> <span class="nx">I</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="k">new</span> <span class="nx">I</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="k">new</span> <span class="nx">I</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="s2">&quot;compareDocumentPosition&quot;</span><span class="k">in</span> <span class="nx">A</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)</span><span class="o">==</span><span class="mi">16</span><span class="p">}</span><span class="o">:</span><span class="s2">&quot;contains&quot;</span><span class="k">in</span> <span class="nx">A</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="nx">c</span><span class="o">==</span><span class="nb">window</span><span class="o">?</span><span class="nx">A</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="p">},</span><span class="nx">Z</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">querySelector</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">x</span><span class="p">)))</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span><span class="k">return</span> <span class="nx">N</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">a</span><span class="p">))}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[],</span><span class="nx">j</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">z</span><span class="p">)){</span><span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;*&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">||</span><span class="nx">J</span><span class="p">.</span><span class="nx">s</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\s+)&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;(\\s+|$)&quot;</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">className</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="nx">i</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="nx">b</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">element</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">Y</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">element</span><span class="p">)}</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">l</span><span class="p">)}</span><span class="k">return</span> <span class="nx">W</span><span class="p">(</span><span class="nx">d</span><span class="p">)};</span><span class="nx">X</span><span class="p">.</span><span class="nx">uniq</span><span class="o">=</span><span class="nx">W</span><span class="p">;</span><span class="kd">var</span> <span class="nx">$</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">qwery</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">noConflict</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">qwery</span><span class="o">=</span><span class="nx">$</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">qwery</span><span class="o">=</span><span class="nx">X</span><span class="p">}(</span><span class="k">this</span><span class="p">,</span><span class="nb">document</span><span class="p">),</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="sr">/^&lt;([^\s&gt;]+)/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">b</span><span class="p">)[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">).</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="nx">f</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">qwery</span><span class="p">.</span><span class="nx">noConflict</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;table&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">thead</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">tbody</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">tfoot</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">tr</span><span class="o">:</span><span class="s2">&quot;tbody&quot;</span><span class="p">,</span><span class="nx">th</span><span class="o">:</span><span class="s2">&quot;tr&quot;</span><span class="p">,</span><span class="nx">td</span><span class="o">:</span><span class="s2">&quot;tr&quot;</span><span class="p">,</span><span class="nx">fieldset</span><span class="o">:</span><span class="s2">&quot;form&quot;</span><span class="p">,</span><span class="nx">option</span><span class="o">:</span><span class="s2">&quot;select&quot;</span><span class="p">};</span><span class="nx">$</span><span class="p">.</span><span class="nx">_select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="sr">/^\s*&lt;/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">$</span><span class="p">.</span><span class="nx">ender</span><span class="p">({</span><span class="nx">find</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">])}</span><span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">uniq</span><span class="p">(</span><span class="nx">c</span><span class="p">))},</span><span class="nx">and</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">,</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="o">!</span><span class="mi">0</span><span class="p">)}(</span><span class="nb">document</span><span class="p">);</span></div><div class='line' id='LC42'><br/></div><div class='line' id='LC43'><span class="kd">var</span> <span class="nx">ender</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">noConflict</span><span class="p">();</span></div><div class='line' id='LC44'><br/></div><div class='line' id='LC45'><span class="kd">function</span> <span class="nx">setHeights</span><span class="p">()</span> <span class="p">{</span></div><div class='line' id='LC46'>	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">hasClass</span><span class="p">(</span><span class="s1">&#39;ggs-hidden&#39;</span><span class="p">))</span> <span class="p">{</span></div><div class='line' id='LC47'><span class="cm">/* Which one is taller, &lt;body&gt; or &lt;html&gt;? */</span></div><div class='line' id='LC48'>		<span class="k">if</span> <span class="p">(</span><span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">offset</span><span class="p">().</span><span class="nx">height</span> <span class="o">&gt;</span> <span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;html&#39;</span><span class="p">).</span><span class="nx">offset</span><span class="p">().</span><span class="nx">height</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC49'>			<span class="kd">var</span> <span class="nx">largerHeight</span> <span class="o">=</span> <span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">offset</span><span class="p">().</span><span class="nx">height</span><span class="p">;</span></div><div class='line' id='LC50'>		<span class="p">}</span></div><div class='line' id='LC51'>		<span class="k">else</span> <span class="p">{</span></div><div class='line' id='LC52'>			<span class="kd">var</span> <span class="nx">largerHeight</span> <span class="o">=</span> <span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;html&#39;</span><span class="p">).</span><span class="nx">offset</span><span class="p">().</span><span class="nx">height</span><span class="p">;</span></div><div class='line' id='LC53'>		<span class="p">}</span></div><div class='line' id='LC54'><br/></div><div class='line' id='LC55'><span class="cm">/* Give guides the new height */</span></div><div class='line' id='LC56'>		<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;.ggs-guide&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span></div><div class='line' id='LC57'>			<span class="nx">ender</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;height&#39;</span><span class="p">,</span> <span class="nx">largerHeight</span><span class="p">);</span></div><div class='line' id='LC58'>		<span class="p">});</span></div><div class='line' id='LC59'><br/></div><div class='line' id='LC60'><span class="cm">/* Calculate the amount of lines needed and append them */</span></div><div class='line' id='LC61'>		<span class="kd">var</span> <span class="nx">lines</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">largerHeight</span><span class="o">/</span><span class="mi">24</span><span class="p">);</span></div><div class='line' id='LC62'>		<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;#ggs-baseline-container&#39;</span><span class="p">).</span><span class="nx">empty</span><span class="p">();</span></div><div class='line' id='LC63'>		<span class="k">for</span> <span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;=</span><span class="nx">lines</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC64'>			<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;#ggs-baseline-container&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;ggs-line&quot;&gt;&lt;/div&gt;&#39;</span><span class="p">);</span></div><div class='line' id='LC65'>		<span class="p">}</span></div><div class='line' id='LC66'><br/></div><div class='line' id='LC67'><span class="cm">/* Set the baseline container to the same height as the guides, so there&#39;s no overflow */</span></div><div class='line' id='LC68'>		<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;#ggs-baseline-container&#39;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;height&#39;</span><span class="p">,</span> <span class="nx">largerHeight</span><span class="p">);</span></div><div class='line' id='LC69'>	<span class="p">}</span></div><div class='line' id='LC70'><span class="p">}</span></div><div class='line' id='LC71'><br/></div><div class='line' id='LC72'><span class="nx">ender</span><span class="p">.</span><span class="nx">domReady</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span></div><div class='line' id='LC73'><br/></div><div class='line' id='LC74'><span class="cm">/* 	Add control classes and switch element */</span></div><div class='line' id='LC75'>	<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;ggs-hidden ggs-animated&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;div id=&quot;ggs-switch&quot;&gt;&lt;div class=&quot;ggs-switchBar&quot;&gt;&lt;/div&gt;&lt;div class=&quot;ggs-switchBar&quot;&gt;&lt;/div&gt;&lt;div class=&quot;ggs-switchBar&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#39;</span><span class="p">);</span></div><div class='line' id='LC76'><br/></div><div class='line' id='LC77'><span class="cm">/*  Create CSS */</span></div><div class='line' id='LC78'>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">styles</span> <span class="o">=</span> <span class="s1">&#39;\</span></div><div class='line' id='LC79'><span class="s1">        html{height:100%;position:relative;}\</span></div><div class='line' id='LC80'><span class="s1">        #ggs-switch{position:fixed;top:0;right:0;z-index:9500; cursor:pointer; width: 24px; padding: 18px 18px 14px; opacity:&#39;</span><span class="o">+</span><span class="nx">switchOpacity</span><span class="o">+</span><span class="s1">&#39;; -webkit-transform: rotate(-90deg); -moz-transform: rotate(-90deg); -ms-transform: rotate(-90deg); transform: rotate(-90deg); -webkit-transition: all 0.145s ease-out; -moz-transition: all 0.145s ease-out; -ms-transition: all 0.145s ease-out; transition: all 0.145s ease-out;}\</span></div><div class='line' id='LC81'><span class="s1">        .ggs-switchBar {background: &#39;</span><span class="o">+</span><span class="nx">switchColor</span><span class="o">+</span><span class="s1">&#39;; height: 4px; margin-bottom: 4px;}\</span></div><div class='line' id='LC82'><span class="s1">        .ggs-animated #ggs-switch {-webkit-transform: rotate(0deg); -moz-transform: rotate(0deg); transform: rotate(0deg);}\</span></div><div class='line' id='LC83'><span class="s1">        .ggs-guide{position:absolute;top:0;z-index:9000;height:100%;margin-left:-0.75em;border:solid &#39;</span><span class="o">+</span><span class="nx">guideColor</span><span class="o">+</span><span class="s1">&#39;;border-width:0 0.75em;background:&#39;</span><span class="o">+</span><span class="nx">guideColor</span><span class="o">+</span><span class="s1">&#39;;opacity:&#39;</span><span class="o">+</span><span class="nx">guideOpacity</span><span class="o">+</span><span class="s1">&#39;; -webkit-transition: all 0.235s ease-out; -moz-transition: all 0.235s ease-out; -ms-transition: all 0.235s ease-out; transition: all 0.235s ease-out;}\</span></div><div class='line' id='LC84'><span class="s1">        .ggs-animated .ggs-guide {-webkit-transform: scale(0, 1); -moz-transform: scale(0, 1); -ms-transform: scale(0, 1); transform: scale(0, 1); opacity: 0;}\</span></div><div class='line' id='LC85'><span class="s1">        .ggs-animated #ggs-baseline-container {opacity: 0;}\</span></div><div class='line' id='LC86'><span class="s1">        .ggs-hidden .ggs-guide, .ggs-hidden #ggs-baseline-container {display: none;}\</span></div><div class='line' id='LC87'><span class="s1">        .ggs-0{left:0;}\</span></div><div class='line' id='LC88'><span class="s1">        .ggs-1{left:11.11111111111111%;}\</span></div><div class='line' id='LC89'><span class="s1">        .ggs-2{left:16.666666666666664%;}\</span></div><div class='line' id='LC90'><span class="s1">        .ggs-3{left:22.22222222222222%;}\</span></div><div class='line' id='LC91'><span class="s1">        .ggs-4{left:27.77777777777778%;}\</span></div><div class='line' id='LC92'><span class="s1">        .ggs-5{left:33.33333333333333%;}\</span></div><div class='line' id='LC93'><span class="s1">        .ggs-6{left:38.888888888888886%;}\</span></div><div class='line' id='LC94'><span class="s1">        .ggs-7{left:44.44444444444444%;}\</span></div><div class='line' id='LC95'><span class="s1">        .ggs-8{left:50%;}\</span></div><div class='line' id='LC96'><span class="s1">        .ggs-9{left:55.55555555555556%;}\</span></div><div class='line' id='LC97'><span class="s1">        .ggs-10{left:61.11111111111111%;}\</span></div><div class='line' id='LC98'><span class="s1">        .ggs-11{left:66.66666666666666%;}\</span></div><div class='line' id='LC99'><span class="s1">        .ggs-12{left:72.22222222222221%;}\</span></div><div class='line' id='LC100'><span class="s1">        .ggs-13{left:77.77777777777777%;}\</span></div><div class='line' id='LC101'><span class="s1">        .ggs-14{left:83.33333333333333%;}\</span></div><div class='line' id='LC102'><span class="s1">        .ggs-15{left:88.88888888888889%;}\</span></div><div class='line' id='LC103'><span class="s1">        .ggs-16{right:0;}\</span></div><div class='line' id='LC104'><span class="s1">        .ggs-0,.ggs-16{width:5.555555555555555%;padding-right:0.75em;border:0;margin:0;}\</span></div><div class='line' id='LC105'><span class="s1">        .ggs-guide div{background:&#39;</span><span class="o">+</span><span class="nx">guideInnerColor</span><span class="o">+</span><span class="s1">&#39;;width:2px;height:100%;position:absolute;left:-1px;top:0;}\</span></div><div class='line' id='LC106'><span class="s1">        .ggs-0 div{left:auto;right:0.75em;}\</span></div><div class='line' id='LC107'><span class="s1">        .ggs-16 div{left:0.75em;}\</span></div><div class='line' id='LC108'><span class="s1">        #ggs-baseline-container {opacity: &#39;</span><span class="o">+</span><span class="nx">guideOpacity</span><span class="o">+</span><span class="s1">&#39;; position: absolute; left:0; top:0; z-index: 8000; width: 100%; height: 100%; -webkit-transition: opacity 0.235s ease-out; -moz-transition: opacity 0.235s ease-out; -ms-transition: opacity 0.235s ease-out; transition: opacity 0.235s ease-out; overflow-y: hidden;}\</span></div><div class='line' id='LC109'><span class="s1">        .ggs-line {border-top: 1px dotted &#39;</span><span class="o">+</span><span class="nx">guideColor</span><span class="o">+</span><span class="s1">&#39;; height: &#39;</span><span class="o">+</span><span class="nx">baselineGridHeight</span><span class="o">+</span><span class="s1">&#39;; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; -o-box-sizing: border-box; box-sizing: border-box;}\</span></div><div class='line' id='LC110'><span class="s1">        @media screen and (max-width: &#39;</span><span class="o">+</span><span class="p">(</span><span class="nx">eightColBreakpoint</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;){.ggs-2,.ggs-6,.ggs-10,.ggs-14{display:none;}}\</span></div><div class='line' id='LC111'><span class="s1">        @media screen and (max-width: &#39;</span><span class="o">+</span><span class="p">(</span><span class="nx">sixteenColBreakpoint</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;){.ggs-1,.ggs-3,.ggs-5,.ggs-7,.ggs-9,.ggs-11,.ggs-13,.ggs-15{display:none;}}\</span></div><div class='line' id='LC112'><span class="s1">    &#39;</span><span class="p">;</span>	</div><div class='line' id='LC113'><br/></div><div class='line' id='LC114'><span class="cm">/* 	Create guides */</span></div><div class='line' id='LC115'>	<span class="k">for</span> <span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;=</span><span class="mi">16</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC116'>		<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;ggs-guide ggs-&#39;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&#39;</span><span class="p">));</span></div><div class='line' id='LC117'>	<span class="p">};</span></div><div class='line' id='LC118'>	<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;&lt;div id=&quot;ggs-baseline-container&quot;&gt;&lt;/div&gt;&#39;</span><span class="p">));</span></div><div class='line' id='LC119'><br/></div><div class='line' id='LC120'><span class="cm">/* 	Append CSS */</span></div><div class='line' id='LC121'>	<span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC122'>		<span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">createStyleSheet</span><span class="p">)</span> <span class="p">{</span></div><div class='line' id='LC123'>			<span class="nx">d</span><span class="p">.</span><span class="nx">createStyleSheet</span><span class="p">(</span> <span class="nx">u</span> <span class="p">);</span></div><div class='line' id='LC124'>		<span class="p">}</span> </div><div class='line' id='LC125'>		<span class="k">else</span> <span class="p">{</span></div><div class='line' id='LC126'>			<span class="kd">var</span> <span class="nx">css</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;style&#39;</span><span class="p">);</span></div><div class='line' id='LC127'>			<span class="nx">css</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="s2">&quot;text/css&quot;</span><span class="p">);</span></div><div class='line' id='LC128'>			<span class="nx">css</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">u</span><span class="p">));</span></div><div class='line' id='LC129'>			<span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">css</span><span class="p">);</span></div><div class='line' id='LC130'>		<span class="p">}</span></div><div class='line' id='LC131'>	<span class="p">}(</span><span class="nb">document</span><span class="p">,</span> <span class="nx">styles</span><span class="p">))</span></div><div class='line' id='LC132'><br/></div><div class='line' id='LC133'><span class="cm">/* 	Resize guides when window size changes */</span></div><div class='line' id='LC134'>	<span class="nx">ender</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;resize&#39;</span><span class="p">,</span> <span class="nx">setHeights</span><span class="p">);</span></div><div class='line' id='LC135'><br/></div><div class='line' id='LC136'><span class="cm">/* 	Add listeners for switch element */</span></div><div class='line' id='LC137'>	<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;#ggs-switch&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span></div><div class='line' id='LC138'>		<span class="k">if</span> <span class="p">(</span><span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">hasClass</span><span class="p">(</span><span class="s1">&#39;ggs-hidden&#39;</span><span class="p">))</span> <span class="p">{</span></div><div class='line' id='LC139'>			<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;ggs-hidden&#39;</span><span class="p">);</span></div><div class='line' id='LC140'>			<span class="nx">setHeights</span><span class="p">();</span></div><div class='line' id='LC141'>			<span class="nx">setTimeout</span><span class="p">(</span></div><div class='line' id='LC142'>				<span class="kd">function</span> <span class="p">()</span> <span class="p">{</span></div><div class='line' id='LC143'>					<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;ggs-animated&#39;</span><span class="p">);</span></div><div class='line' id='LC144'>				<span class="p">},</span></div><div class='line' id='LC145'>				<span class="mi">20</span></div><div class='line' id='LC146'>			<span class="p">);</span></div><div class='line' id='LC147'>		<span class="p">}</span></div><div class='line' id='LC148'>		<span class="k">else</span> <span class="p">{</span></div><div class='line' id='LC149'>			<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;ggs-animated&#39;</span><span class="p">);</span></div><div class='line' id='LC150'>			<span class="nx">setTimeout</span><span class="p">(</span></div><div class='line' id='LC151'>				<span class="kd">function</span> <span class="p">()</span> <span class="p">{</span></div><div class='line' id='LC152'>					<span class="nx">ender</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;ggs-hidden&#39;</span><span class="p">);</span></div><div class='line' id='LC153'>				<span class="p">},</span></div><div class='line' id='LC154'>				<span class="mi">300</span></div><div class='line' id='LC155'>			<span class="p">);</span></div><div class='line' id='LC156'>		<span class="p">}</span></div><div class='line' id='LC157'>	<span class="p">});</span></div><div class='line' id='LC158'><br/></div><div class='line' id='LC159'><span class="p">});</span></div></pre></div>
              
            
          </td>
        </tr>
      </table>
    
  </div>


          </div>
        </div>
      </div>
    </div>
  

  </div>

<div class="frame frame-loading" style="display:none;" data-tree-list-url="/jonikorpi/Golden-Grid-System/tree-list/60710710a2cacc52b1762568f4666d9170917abc" data-blob-url-prefix="/jonikorpi/Golden-Grid-System/blob/60710710a2cacc52b1762568f4666d9170917abc">
  <img src="https://a248.e.akamai.net/assets.github.com/images/modules/ajax/big_spinner_336699.gif" height="32" width="32">
</div>

    </div>

    </div>

    <!-- footer -->
    <div id="footer" >
      
  <div class="upper_footer">
     <div class="site" class="clearfix">

       <!--[if IE]><h4 id="blacktocat_ie">GitHub Links</h4><![endif]-->
       <![if !IE]><h4 id="blacktocat">GitHub Links</h4><![endif]>

       <ul class="footer_nav">
         <h4>GitHub</h4>
         <li><a href="https://github.com/about">About</a></li>
         <li><a href="https://github.com/blog">Blog</a></li>
         <li><a href="https://github.com/features">Features</a></li>
         <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
         <li><a href="https://github.com/training">Training</a></li>
         <li><a href="http://status.github.com/">Site Status</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Tools</h4>
         <li><a href="http://mac.github.com/">GitHub for Mac</a></li>
         <li><a href="http://mobile.github.com/">Issues for iPhone</a></li>
         <li><a href="https://gist.github.com">Gist: Code Snippets</a></li>
         <li><a href="http://fi.github.com/">Enterprise Install</a></li>
         <li><a href="http://jobs.github.com/">Job Board</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Extras</h4>
         <li><a href="http://shop.github.com/">GitHub Shop</a></li>
         <li><a href="http://octodex.github.com/">The Octodex</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Documentation</h4>
         <li><a href="http://help.github.com/">GitHub Help</a></li>
         <li><a href="http://developer.github.com/">Developer API</a></li>
         <li><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></li>
         <li><a href="http://pages.github.com/">GitHub Pages</a></li>
       </ul>

     </div><!-- /.site -->
  </div><!-- /.upper_footer -->

<div class="lower_footer">
  <div class="site" class="clearfix">
    <!--[if IE]><div id="legal_ie"><![endif]-->
    <![if !IE]><div id="legal"><![endif]>
      <ul>
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
      </ul>

      <p>&copy; 2011 <span id="_rrt" title="0.05677s from fe6.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    </div><!-- /#legal or /#legal_ie-->

      <div class="sponsor">
        <a href="http://www.rackspace.com" class="logo">
          <img alt="Dedicated Server" height="36" src="https://a248.e.akamai.net/assets.github.com/images/modules/footer/rackspace_logo.png?v2" width="38" />
        </a>
        Powered by the <a href="http://www.rackspace.com ">Dedicated
        Servers</a> and<br/> <a href="http://www.rackspacecloud.com">Cloud
        Computing</a> of Rackspace Hosting<span>&reg;</span>
      </div>
  </div><!-- /.site -->
</div><!-- /.lower_footer -->

    </div><!-- /#footer -->

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selected down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selected up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selected down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selected up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selected down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selected up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle select target</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column middle">
        <dl class="keyboard-mappings">
          <dt>I</dt>
          <dd>Mark selected as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>U</dt>
          <dd>Mark selected as unread</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>e</dt>
          <dd>Close selected</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Remove selected from view</dd>
        </dl>
      </div><!-- /.column.middle -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selected down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selected up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>
</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:
> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>

    <div class="context-overlay"></div>

    
    
    
  </body>
</html>

